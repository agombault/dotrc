---
- name: neovim - download Git Time Metric {{ gtm_version }}
  get_url:
    url: "https://github.com/git-time-metric/gtm/releases/download/v1.2.11/gtm.v1.2.11.linux.tar.gz"
    dest: "{{ ansible_env.HOME }}/bin/gtm.v{{ gtm_version }}.linux.tar.gz"

- name: neovim - extract Git Time Metric {{ gtm_version }}
  unarchive:
    src: "{{ ansible_env.HOME }}/bin/gtm.v{{ gtm_version }}.linux.tar.gz"
    dest: "{{ ansible_env.HOME }}/bin"
    copy: no
    creates: "{{ ansible_env.HOME }}/bin/gtm"

- name: neovim - install repo
  apt_repository:
    repo: 'ppa:neovim-ppa/unstable'
    state: present
    update_cache: yes
  become: true

- name: neovim - install neovim
  apt:
    name: neovim
    update_cache: yes
  become: true

- name: neovim - make sure nvim config directory exists
  file:
    path: "{{ ansible_env.HOME }}/.local/share/nvim/site/autoload"
    state: directory
    mode: 0750

- name: neovim - get vim-plug
  get_url:
    url: "https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
    dest: "{{ ansible_env.HOME }}/.local/share/nvim/site/autoload/plug.vim"

- name: neovim - make sure nvim config directory exists
  file:
    path: "{{ ansible_env.HOME }}/.config/nvim"
    state: directory
    mode: 0775

- name: neovim - copy init.vim
  copy:
    src: "init.vim"
    dest: "{{ ansible_env.HOME }}/.config/nvim/init.vim"
    mode: 0644

- name: neovim - copy bundle.vim
  copy:
    src: "bundle.vim"
    dest: "{{ ansible_env.HOME }}/.config/nvim/bundle.vim"
    mode: 0644

- name: neovim - copy snipets
  copy:
    src: "_vim/snippets"
    dest: "{{ ansible_env.HOME }}/.config/nvim/"
    mode: 0644

- name: neovim - install ruby extension
  shell: "eval '$({{ ansible_env.HOME }}/.rbenv/bin/rbenv which gem) install neovim'"

- name: neovim - install python extension
  command: "pip install neovim"
  # become: true

- name: neovim - install plugins
  command: nvim +PlugInstall +qall
